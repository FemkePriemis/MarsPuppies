name: Build and deploy a container to an Azure Web App

env:
  AZURE_WEBAPP_NAME: 'PuppyAPI'
  REGISTRY_NAME: 'PuppyAPI'
  CLUSTER_NAME: 'AKSCAMP'
  NAMESPACE: 'default'
  CLUSTER_RESOURCE_GROUP: 'CAMP'
  SECRET: 'githubaction'
  APP_VERSION: "v0.1.1"
  APP_NAME: 'PuppyAPI'

on:
  push:
    branches: [ "Dev" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
#   push_to_docker_registry:
#    # needs: build_and_test
#     name: Push Docker image to Docker Hub
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2
#     - name: docker login
#       env:
#         DOCKER_USER: ${{secrets.DOCKERHUB_USERNAME}}
#         DOCKER_PASSWORD: ${{secrets.DOCKERHUB_PASSWORD}}
#       run: |
#         docker login -u $DOCKER_USER -p $DOCKER_PASSWORD
#     - name: Build API Image
#       run: docker build . --file PuppyPlatform/PuppyAPI/Dockerfile --tag gaico1608/puppyapi:latest
#     - name: Push API Image
#       run: docker push gaico1608/puppyapi:latest
  
  azure_deployment:
      needs: push_to_docker_registry
      name: Push image to ACR
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@main

        # Connect to Azure Container Registry (ACR)
        - uses: azure/docker-login@v1
          with:
            login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
            username: ${{ env.REGISTRY_NAME }}
            password: ${{ secrets.PUPPYAPI_ACR_PASSWORD }}

        # Container build and push to a Azure Container Registry (ACR)
        - run: |
            docker build --file ./PuppyPlatform/PuppyAPI/Dockerfile -t ${{ env.REGISTRY_NAME }}.azurecr.io/puppyapi:${{ env.APP_VERSION }} .
            docker push ${{ env.REGISTRY_NAME }}.azurecr.io/puppyapi:${{ env.APP_VERSION }}

#         - uses: azure/aks-set-context@v1
#           with:
#             creds: '${{ secrets.AZURE_CREDENTIALS }}'
#             cluster-name: ${{ env.CLUSTER_NAME }}
#             resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}


#         # Create image pull secret for ACR
#         - uses: azure/k8s-create-secret@v1
#           with:
#             container-registry-url: ${{ env.REGISTRY_NAME }}.azurecr.io
#             container-registry-username: ${{ secrets.REGISTRY_NAME }}
#             container-registry-password: ${{ secrets.REGISTRY_PASSWORD }}
#             secret-name: ${{ env.SECRET }}
#             namespace: ${{ env.NAMESPACE }}
#             arguments: --force true
